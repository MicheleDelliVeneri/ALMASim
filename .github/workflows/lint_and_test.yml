name: Run tests

on:
  schedule:
    - cron: '19 3 * * 1-5'
  push:
  pull_request:
  workflow_call:  

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.4"
      - name: Run Black
        uses: psf/black@stable
        with:
          options: "--check --verbose --exclude experimental|illustris_python"
          jupyter: true
      - name: Run flake8
        uses: py-actions/flake8@v2
        with:
          exclude: experimental,illustris_python
      - name: Install mypy
        run: pip install mypy
      - name: Install types
        run: mypy --install-types --non-interactive
      - name: Run mypy
        run: mypy
      - name: Install almasim
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -e .
          git submodule update --init    
          cd illustris_python
          pip install . 
          cd ..
      - name: Create kaggle.json from secret
        env:
          KAGGLE_JSON_B64: ${{ secrets.KAGGLE_JSON_B64 }}
        run: |
          mkdir -p /home/runner/.kaggle
          echo $KAGGLE_JSON_B64 | base64 --decode > /home/runner/.kaggle/kaggle.json
          chmod 600 /home/runner/.kaggle/kaggle.json
      - name: Install required libraries
        run: |
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libxcb-shape0 libglib2.0-0 libgl1-mesa-dev
          sudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
          # start xvfb in the background
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &  
      - name: Set up Headless Environment
        run: export QT_QPA_PLATFORM=offscreen
      - name: Run stubtest
        run: |
          chmod +x ./run_stubtest
          ./run_stubtest

  tests:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    env:
      DISPLAY: ':99.0'
      PYTHONPATH: ${{ github.workspace }}/ALMASim  # Ensure PYTHONPATH is set
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Qt
      uses: tlambert03/setup-qt-libs@v1
    - name: Start Xvfb
      run: sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt install -y xvfb x11-utils libxkbcommon-x11-0
        pip install flake8 pytest pytest-cov pytest-qt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f optional_requirements.txt ]; then pip install -r optional_requirements.txt; fi
        pip install -e .
        git submodule update --init    
        cd illustris_python
        pip install . 
        cd ..
        sudo apt install python3-qtpy
        pip install PyQt6 --upgrade
        pip install pyqtgraph
        cd ..
    - name: Set up Headless Environment
      run: export QT_QPA_PLATFORM=offscreen
    - name: Test with pytest
      run: |
        sudo xvfb-run --auto-servernum \
              --server-num=1 \
              --server-args="-screen 1 1920x1200x24 -ac +extension GLX" \
              /opt/hostedtoolcache/Python/3.12.4/x64/bin/pytest --ignore=illustris_python --rootdir ${{ github.workspace }}

  tests-and-coverage:
    needs: lint
    runs-on: ubuntu-latest
    env:
      DISPLAY: ':99.0'
      PYTHONPATH: ${{ github.workspace }}/ALMASim  # Ensure PYTHONPATH is set
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.4"
    - name: Install Qt
      uses: tlambert03/setup-qt-libs@v1
    - name: Start Xvfb
      run: sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt install -y xvfb x11-utils libxkbcommon-x11-0
        pip install flake8 pytest pytest-cov pytest-qt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f optional_requirements.txt ]; then pip install -r optional_requirements.txt; fi
        pip install -e .
        git submodule update --init
        cd illustris_python
        pip install .
        cd ..
        sudo apt install python3-qtpy
        pip install PyQt6 --upgrade
        pip install pyqtgraph
        cd ..
    - name: Set up Headless Environment
      run: export QT_QPA_PLATFORM=offscreen                         
    - name: Test with pytest including coverage report
      run: |
        sudo xvfb-run --auto-servernum \
              --server-num=1 \
              --server-args="-screen 1 1920x1200x24 -ac +extension GLX" \
              /opt/hostedtoolcache/Python/3.12.4/x64/bin/pytest --ignore=illustris_python --cov=./ --cov-report=xml --rootdir ${{ github.workspace }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
