# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish to PyPI

on:
  push:
    branches:
      - main  # Or your release branch

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive   # Check out the submodule
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: pipx install poetry
      - name: Install dependencies
        run: poetry install
      - name: Install illustris_python
        run: |
          git submodule update --init    
          cd illustris_python
          pip install .
          cd ..
      - name: Create kaggle.json from secret
        env:
          KAGGLE_JSON_B64: ${{ secrets.KAGGLE_JSON_B64 }}
        run: |
          mkdir -p /home/runner/.kaggle
          echo "$KAGGLE_JSON_B64" | base64 --decode > /home/runner/.kaggle/kaggle.json
          chmod 600 /home/runner/.kaggle/kaggle.json
      - name: Build and Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi $POETRY_PYPI_TOKEN_PYPI
          poetry publish --build 
